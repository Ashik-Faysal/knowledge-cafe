[
    {
        "id": "01",
        "question":"Props Vs State?",
        "answer":"props are used to pass data from a parent component to a child component, while state is used to manage data that can change within a component itself. State: The state represents parts of an Application that can change. Each component can have its State. The state is Mutable and It is local to the component only."
    },
    {
        "id": "02",
        "question":"How does useEffects work?",
        "answer":"When we want to perform something after each render of component then we can use the useEffect() hook. By using this Hook, we tell React that our component needs to do something after render by passing a function. React remember the function we passed in useEffect() hook and call it later after performing the DOM updates."
    },
    {
        "id": "03",
        "question":"Purpose of useEffect other than fetching data?",
        "answer":"The useEffect in react js allows you to perform side effects in your components. The react useEffect examples of side effects include retrieving data, direct DOM updates, and timers. The second argument is optional"
    },
    {
        "id": "04",
        "question":"How does react work?",
        "answer":"React is a JavaScript library for building user interfaces. It works by creating and managing a virtual representation of the UI, called the virtual-DOM. This virtual DOM is a lightweight copy of the actual DOM, and it can be updated more efficiently than the real DOM."
    }
]